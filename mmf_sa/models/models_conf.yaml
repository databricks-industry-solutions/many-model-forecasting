promoted_props:
  - prediction_length
  - group_id
  - date_col
  - target
  - metric
  - freq
  - temp_path
  - accelerator
  - backtest_length
  - stride
  - static_features
  - dynamic_future_numerical
  - dynamic_future_categorical
  - dynamic_historical_numerical
  - dynamic_historical_categorical

models:

  StatsForecastBaselineWindowAverage:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcBaselineWindowAverage
    framework: StatsForecast
    model_type: local
    model_spec:
      window_size: 7

  StatsForecastBaselineSeasonalWindowAverage:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcBaselineSeasonalWindowAverage
    framework: StatsForecast
    model_type: local
    model_spec:
      season_length: 7
      window_size: 7

  StatsForecastBaselineNaive:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcBaselineNaive
    framework: StatsForecast
    model_type: local

  StatsForecastBaselineSeasonalNaive:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcBaselineSeasonalNaive
    framework: StatsForecast
    model_type: local
    model_spec:
      season_length: 7

  StatsForecastAutoArima:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcAutoArima
    framework: StatsForecast
    model_type: local
    model_spec:
      season_length: 7
      approximation: false

  StatsForecastAutoETS:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcAutoETS
    framework: StatsForecast
    model_type: local
    model_spec:
      season_length: 7
      model: "ZZZ"

  StatsForecastAutoCES:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcAutoCES
    framework: StatsForecast
    model_type: local
    model_spec:
      season_length: 7
      model: "Z"

  StatsForecastAutoTheta:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcAutoTheta
    framework: StatsForecast
    model_type: local
    model_spec:
      season_length: 7
      decomposition_type: "multiplicative"

  StatsForecastAutoTbats:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcAutoTbats
    framework: StatsForecast
    model_type: local
    model_spec:
      season_length: 7
      use_boxcox: true
      bc_lower_bound: 0.0
      bc_upper_bound: 1.0
      use_trend: true
      use_damped_trend: true
      use_arma_errors: true

  StatsForecastAutoMfles:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcAutoMfles
    framework: StatsForecast
    model_type: local
    model_spec:
      season_length: 7

  StatsForecastTSB:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcTSB
    framework: StatsForecast
    model_type: local
    model_spec:
      alpha_d: 0.2
      alpha_p: 0.2

  StatsForecastADIDA:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcADIDA
    framework: StatsForecast
    model_type: local
    model_spec:

  StatsForecastIMAPA:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcIMAPA
    framework: StatsForecast
    model_type: local
    model_spec:

  StatsForecastCrostonClassic:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcCrostonClassic
    framework: StatsForecast
    model_type: local
    model_spec:

  StatsForecastCrostonOptimized:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcCrostonOptimized
    framework: StatsForecast
    model_type: local
    model_spec:

  StatsForecastCrostonSBA:
    module: mmf_sa.models.statsforecast.StatsFcForecastingPipeline
    model_class: StatsFcCrostonSBA
    framework: StatsForecast
    model_type: local
    model_spec:

  SKTimeTBats:
    module: mmf_sa.models.sktime.SKTimeForecastingPipeline
    model_class: SKTimeTBats
    framework: SKTime
    model_type: local
    enable_gcv: false
    model_spec:
      box_cox: True
      use_trend: True
      season_length: 7

  SKTimeProphet:
    module: mmf_sa.models.sktime.SKTimeForecastingPipeline
    model_class: SKTimeProphet
    framework: SKTime
    model_type: local
    enable_gcv: false
    model_spec:
      growth: linear
      yearly_seasonality: auto
      weekly_seasonality: auto
      daily_seasonality: auto
      seasonality_mode: additive

  SKTimeLgbmDsDt:
    module: mmf_sa.models.sktime.SKTimeForecastingPipeline
    model_class: SKTimeLgbmDsDt
    framework: SKTime
    model_type: local
    enable_gcv: false
    model_spec:
      deseasonalise_model: multiplicative
      season_length: 7
      detrend_poly_degree: 2

  NeuralForecastRNN:
    module: mmf_sa.models.neuralforecast.NeuralForecastPipeline
    model_class: NeuralFcRNN
    framework: NeuralForecast
    model_type: global
    max_steps: 500
    input_size_factor: 2
    loss: smape
    learning_rate: 0.001
    batch_size: 32
    dropout_prob_theta: 0.0
    encoder_n_layers: 2
    encoder_hidden_size: 100
    encoder_activation: tanh
    context_size: 10
    decoder_hidden_size: 100
    decoder_layers: 2

  NeuralForecastLSTM:
    module: mmf_sa.models.neuralforecast.NeuralForecastPipeline
    model_class: NeuralFcLSTM
    framework: NeuralForecast
    model_type: global
    max_steps: 500
    input_size_factor: 2
    loss: smape
    learning_rate: 0.001
    batch_size: 32
    dropout_prob_theta: 0.0
    encoder_n_layers: 2
    encoder_hidden_size: 100
    context_size: 10
    decoder_hidden_size: 100
    decoder_layers: 2

  NeuralForecastNBEATSx:
    module: mmf_sa.models.neuralforecast.NeuralForecastPipeline
    model_class: NeuralFcNBEATSx
    framework: NeuralForecast
    model_type: global
    max_steps: 500
    input_size_factor: 2
    loss: smape
    learning_rate: 0.001
    batch_size: 32
    n_harmonics: 2
    n_polynomials: 2
    dropout_prob_theta: 0.0

  NeuralForecastNHITS:
    module: mmf_sa.models.neuralforecast.NeuralForecastPipeline
    model_class: NeuralFcNHITS
    framework: NeuralForecast
    model_type: global
    max_steps: 500
    input_size_factor: 2
    loss: smape
    learning_rate: 0.001
    batch_size: 32
    dropout_prob_theta: 0.0
    stack_types: ["identity", "identity", "identity"]
    n_blocks: [1, 1, 1]
    n_pool_kernel_size: [2, 2, 1]
    n_freq_downsample: [4, 2, 1]
    interpolation_mode: linear
    pooling_mode: MaxPool1d

  NeuralForecastAutoRNN:
    module: mmf_sa.models.neuralforecast.NeuralForecastPipeline
    model_class: NeuralFcAutoRNN
    framework: NeuralForecast
    model_type: global
    max_steps: 500
    num_samples: 20
    loss: smape
    encoder_hidden_size: [ 50, 100, 200, 300 ]
    encoder_n_layers: [ 1, 2, 3, 4 ]
    context_size: [ 5, 10, 50 ]
    decoder_hidden_size: [ 64, 128, 256, 512 ]

  NeuralForecastAutoLSTM:
    module: mmf_sa.models.neuralforecast.NeuralForecastPipeline
    model_class: NeuralFcAutoLSTM
    framework: NeuralForecast
    model_type: global
    max_steps: 500
    num_samples: 20
    loss: smape
    encoder_hidden_size: [ 50, 100, 200, 300 ]
    encoder_n_layers: [ 1, 2, 3, 4 ]
    context_size: [ 5, 10, 50 ]
    decoder_hidden_size: [ 64, 128, 256, 512 ]

  NeuralForecastAutoNBEATSx:
    module: mmf_sa.models.neuralforecast.NeuralForecastPipeline
    model_class: NeuralFcAutoNBEATSx
    framework: NeuralForecast
    model_type: global
    max_steps: 500
    num_samples: 20
    loss: smape
    input_size: 4
    scaler_type: [ "robust", "standard" ]

  NeuralForecastAutoNHITS:
    module: mmf_sa.models.neuralforecast.NeuralForecastPipeline
    model_class: NeuralFcAutoNHITS
    framework: NeuralForecast
    model_type: global
    max_steps: 500
    num_samples: 20
    loss: smape
    input_size: 4
    n_pool_kernel_size: [ [2, 2, 1], [1, 1, 1], [2, 2, 2], [4, 4, 4], [8, 4, 1], [16, 8, 1] ]
    n_freq_downsample: [ [168, 24, 1], [24, 12, 1], [180, 60, 1],  [60, 8, 1], [40, 20, 1], [1, 1, 1] ]
    scaler_type: [ "robust", "standard" ]

  NeuralForecastAutoTiDE:
    module: mmf_sa.models.neuralforecast.NeuralForecastPipeline
    model_class: NeuralFcAutoTiDE
    framework: NeuralForecast
    model_type: global
    max_steps: 500
    num_samples: 20
    loss: smape
    input_size: 4
    hidden_size: [ 256, 512, 1024 ]
    decoder_output_dim: [ 8, 16, 32 ]
    temporal_decoder_dim: [ 32, 64, 128 ]
    num_encoder_layers: [ 1, 2, 3 ]
    num_decoder_layers: [ 1, 2, 3 ]
    temporal_width: [ 4, 8, 16 ]
    dropout: [ 0.0, 0.1, 0.2, 0.3, 0.5 ]
    layernorm: [ True, False ]

  NeuralForecastAutoPatchTST:
    module: mmf_sa.models.neuralforecast.NeuralForecastPipeline
    model_class: NeuralFcAutoPatchTST
    framework: NeuralForecast
    model_type: global
    max_steps: 500
    num_samples: 20
    loss: smape
    input_size: 4
    hidden_size: [ 64, 128, 256 ]
    n_heads: [ 4, 8 ]
    patch_len: [ 16, 24 ]
    scaler_type: [ "robust", "standard" ]
    revin: [ False, True ]

  ChronosT5Tiny:
    module: mmf_sa.models.chronosforecast.ChronosPipeline
    model_class: ChronosT5Tiny
    framework: Chronos
    model_type: foundation
    num_samples: 10
    batch_size: 16

  ChronosT5Mini:
    module: mmf_sa.models.chronosforecast.ChronosPipeline
    model_class: ChronosT5Mini
    framework: Chronos
    model_type: foundation
    num_samples: 10
    batch_size: 16

  ChronosT5Small:
    module: mmf_sa.models.chronosforecast.ChronosPipeline
    model_class: ChronosT5Small
    framework: Chronos
    model_type: foundation
    num_samples: 10
    batch_size: 8

  ChronosT5Base:
    module: mmf_sa.models.chronosforecast.ChronosPipeline
    model_class: ChronosT5Base
    framework: Chronos
    model_type: foundation
    num_samples: 10
    batch_size: 8

  ChronosT5Large:
    module: mmf_sa.models.chronosforecast.ChronosPipeline
    model_class: ChronosT5Large
    framework: Chronos
    model_type: foundation
    num_samples: 10
    batch_size: 2

  ChronosBoltTiny:
    module: mmf_sa.models.chronosforecast.ChronosPipeline
    model_class: ChronosBoltTiny
    framework: Chronos
    model_type: foundation
    num_samples: 10
    batch_size: 16

  ChronosBoltMini:
    module: mmf_sa.models.chronosforecast.ChronosPipeline
    model_class: ChronosBoltMini
    framework: Chronos
    model_type: foundation
    num_samples: 10
    batch_size: 16

  ChronosBoltSmall:
    module: mmf_sa.models.chronosforecast.ChronosPipeline
    model_class: ChronosBoltSmall
    framework: Chronos
    model_type: foundation
    num_samples: 10
    batch_size: 16

  ChronosBoltBase:
    module: mmf_sa.models.chronosforecast.ChronosPipeline
    model_class: ChronosBoltBase
    framework: Chronos
    model_type: foundation
    num_samples: 10
    batch_size: 16

  MoiraiSmall:
    module: mmf_sa.models.moiraiforecast.MoiraiPipeline
    model_class: MoiraiSmall
    framework: Moirai
    model_type: foundation
    num_samples: 10
    patch_size: 32
    batch_size: 10

  MoiraiBase:
    module: mmf_sa.models.moiraiforecast.MoiraiPipeline
    model_class: MoiraiBase
    framework: Moirai
    model_type: foundation
    num_samples: 10
    patch_size: 32
    batch_size: 10

  MoiraiLarge:
    module: mmf_sa.models.moiraiforecast.MoiraiPipeline
    model_class: MoiraiLarge
    framework: Moirai
    model_type: foundation
    num_samples: 10
    patch_size: 32
    batch_size: 10

  MoiraiMoESmall:
    module: mmf_sa.models.moiraiforecast.MoiraiPipeline
    model_class: MoiraiMoESmall
    framework: Moirai
    model_type: foundation
    num_samples: 10
    patch_size: 32
    batch_size: 10

  MoiraiMoEBase:
    module: mmf_sa.models.moiraiforecast.MoiraiPipeline
    model_class: MoiraiMoEBase
    framework: Moirai
    model_type: foundation
    num_samples: 10
    patch_size: 32
    batch_size: 10

  MoiraiMoELarge:
    module: mmf_sa.models.moiraiforecast.MoiraiPipeline
    model_class: MoiraiMoELarge
    framework: Moirai
    model_type: foundation
    num_samples: 10
    patch_size: 32
    batch_size: 10

  TimesFM_1_0_200m:
    module: mmf_sa.models.timesfmforecast.TimesFMPipeline
    model_class: TimesFM_1_0_200m
    framework: TimesFM
    model_type: foundation

  TimesFM_2_0_500m:
    module: mmf_sa.models.timesfmforecast.TimesFMPipeline
    model_class: TimesFM_2_0_500m
    framework: TimesFM
    model_type: foundation
